using Microsoft.AspNetCore.Authentication.JwtBearer;
using Microsoft.IdentityModel.Tokens;
using Microsoft.OpenApi.Models;
using SmartTransit.Application.DependencyInjection;
using System.Text;

var builder = WebApplication.CreateBuilder(args);

// 1Ô∏è‚É£ Configura√ß√µes JWT
var jwtSettings = builder.Configuration.GetSection("Settings:Jwt");
var secretKey = jwtSettings["SigningKey"];  // A chave de assinatura

if (string.IsNullOrEmpty(secretKey))
{
    throw new ArgumentNullException("SigningKey", "JWT SigningKey n√£o est√° configurada.");
}

builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddJwtBearer(options =>
    {
        options.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateIssuer = true,
            ValidateAudience = true,
            ValidIssuer = jwtSettings["Issuer"],     // Usando o Issuer configurado
            ValidAudience = jwtSettings["Audience"], // Usando o Audience configurado
            ValidateLifetime = true,
            ValidateIssuerSigningKey = true,   // Validando a chave de assinatura
            IssuerSigningKey = new SymmetricSecurityKey(
                Encoding.UTF8.GetBytes(secretKey)  // Usando a chave de assinatura configurada
            ),
            ClockSkew = TimeSpan.Zero
        };
    });

// 2Ô∏è‚É£ Autoriza√ß√£o
builder.Services.AddAuthorization();

// 3Ô∏è‚É£ Inje√ß√£o de Depend√™ncia da sua aplica√ß√£o
builder.Services.AddDependencyInjection(builder.Configuration);

// 4Ô∏è‚É£ Swagger com autentica√ß√£o JWT no header
builder.Services.AddSwaggerGen(options =>
{
    options.AddSecurityDefinition("Bearer", new OpenApiSecurityScheme
    {
        Description = @"JWT no header usando o esquema Bearer.  
                        Exemplo: 'Bearer eyJhbGci...'",
        Name = "Authorization",
        In = ParameterLocation.Header,
        Type = SecuritySchemeType.ApiKey,
        Scheme = "Bearer"
    });

    options.AddSecurityRequirement(new OpenApiSecurityRequirement
    {
        {
            new OpenApiSecurityScheme
            {
                Reference = new OpenApiReference
                {
                    Type = ReferenceType.SecurityScheme,
                    Id = "Bearer"
                }
            },
            Array.Empty<string>()
        }
    });
});

// 5Ô∏è‚É£ Controllers
builder.Services.AddControllers();

// 6Ô∏è‚É£ Monta o app
var app = builder.Build();

// 7Ô∏è‚É£ Middlewares
app.UseHttpsRedirection();

app.UseAuthentication(); // üîê Primeiro autentica
app.UseAuthorization();  // üîì Depois autoriza

// 8Ô∏è‚É£ Swagger
app.UseSwagger();
app.UseSwaggerUI();

// 9Ô∏è‚É£ Mapeia rotas
app.MapControllers();

// üîü Starta o app
app.Run();
